
// if you have a constant value that is used many times in your program, you can define that in a single place
$CONST : "fixed"
$IO.Write($CONST) // prints 'fixed'

// the data keyword lets you define more complicated static content as part of your program
data Warrior : dim
    Attack : 5
    Defense : 3
    Cost : 2

// you can reference Data objects statically, with the $ sign
$IO.Write(~$Warrior.Cost) // prints 2


// if you have a set of possible values, you can create an 'enum'
enum DayOfWeek
    Monday; Tuesday; Wednesday; Thursday; Friday; Saturday; Sunday

// you can also build an enum where the enum value itself contains data
enum CardSuits
    Hearts : "♥"
    Diamonds : "♦"
    Clubs : "♣"
    Spades : "♠"

// references to enum values are a special type of variable
// they contain the unique static path to the enum value (e.g. $CardSuits.Clubs)
// but the contents can be retrieved using the '~' operator
$IO.Write(~$CardSuits.Clubs) // prints "♣"
