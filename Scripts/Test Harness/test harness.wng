
#if $Compiler.IsTest
	registry TESTS
	scratch ASSERTS : 0
	scratch FAILS : 0
	global ::REGTEST(name, lamb)
		^TESTS.$List.Add(dim)
			Lambda: free lamb
			Name: name
	
	global ::assert(test)
		if test
			^ASSERTS : ^ASSERTS + 1
		else
			^FAILS : ^FAILS + 1
	
	global ::TestMain(=> async)
		for ^TESTS
			await $Run(it)
		$IO.Log(~^ASSERTS + " of " + ~(^ASSERTS + ^FAILS) + " tests passed")
			
	::Run(test => async)
		@asserts : ^ASSERTS
		@fail : ^FAILS
		
		await $(test.Lambda)
		
		if asserts = ^ASSERTS & fail = ^FAILS
			$IO.Log("Test did not assert: " + ~test.Name)
		else if fail != ^FAILS
			$IO.Log("FAIL: " + ~test.Name)
				

#suggest
	global ::assert(test)
	registry TESTS
	scratch ASSERTS
	scratch FAILS

#def #test(code, meta => code)
	if !$Compiler.IsTest
		return dim
	@name : $MacroHelp.Escape(code[0])
	if name = ""
		name : meta.File + " line " + ~meta.Line
	code[0] : "data: $REGTEST(\"" + name + "\", lambda)"
	return code

#test asdf
	$assert(true)


